name: Docker
on:
  push:
    branches:
      - dev

jobs:
  build-client:
    name: "Build (Client)"
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: client
          push: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/dev' }}
          platforms: linux/amd64
          file: client/Dockerfile
          build-args: |
            FACEBOOK_APP_ID=${{ secrets.FACEBOOK_APP_ID }}
            GOOGLE_ANALYTICS_ID=${{ secrets.GOOGLE_ANALYTICS_ID }}
            GOOGLE_API_KEY=${{ secrets.GOOGLE_API_KEY }}
            GOOGLE_OAUTH_CLIENT_ID=${{ secrets.GOOGLE_OAUTH_CLIENT_ID }}
            SENTRY_INGEST_CLIENT=${{ secrets.SENTRY_INGEST_CLIENT }}
            SENTRY_TRACE_RATE_CLIENT=${{ secrets.SENTRY_TRACE_RATE_CLIENT }}
          tags: |
            ghcr.io/csesoc/notangles-client:${{ github.sha }}
            ghcr.io/csesoc/notangles-client:latest
          labels: ${{ steps.meta.outputs.labels }}
  build:
    name: "Build (${{ matrix.component }})"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        component: [server, auto_server]
        include:
          - component: server
            name: backend
          - component: auto_server
            name: auto-timetabler-server
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: arm64
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ${{ matrix.component }}
          push: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/dev' }}
          platforms: linux/amd64
          file: ${{ matrix.component }}/Dockerfile
          tags: |
            ghcr.io/csesoc/notangles-${{ matrix.name }}:${{ github.sha }}
            ghcr.io/csesoc/notangles-${{ matrix.name }}:latest
          labels: ${{ steps.meta.outputs.labels }}
  deploy:
    name: Deploy (CD)
    runs-on: ubuntu-latest
    needs: [build-client, build]
    if: ${{ github.event_name != 'pull_request' && github.ref == 'refs/heads/dev' }}
    concurrency: production
    environment:
      name: production
      url: https://notangles.csesoc.app

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          repository: csesoc/deployment
          token: ${{ secrets.GH_TOKEN }}
      - name: Install yq - portable yaml processor
        uses: mikefarah/yq@v4.30.2
      - name: Update deployment
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          git config user.name "CSESoc CD"
          git config user.email "technical@csesoc.org.au"
          git checkout -b update/notangles/${{ github.sha }}
          yq -i '.items[0].spec.template.spec.containers[0].image = "ghcr.io/csesoc/notangles-client:${{ github.sha }}"' apps/projects/notangles/deploy-frontend.yml
          yq -i '.items[0].spec.template.spec.containers[0].image = "ghcr.io/csesoc/notangles-backend:${{ github.sha }}"' apps/projects/notangles/deploy-backend.yml
          yq -i '.items[0].spec.template.spec.containers[0].image = "ghcr.io/csesoc/notangles-auto-timetabler-server:${{ github.sha }}"' apps/projects/notangles/deploy-auto-timetabler.yml
          git add . 
          git commit -m "feat(notangles): update images" 
          git push -u origin update/notangles/${{ github.sha }}
          gh pr create --title "feat(notangles): update images" --body "Updates the images for the notangles deployment to commit csesoc/notangles@${{ github.sha }}." > URL
          gh pr merge $(cat URL) --squash -d
